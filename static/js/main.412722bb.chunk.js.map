{"version":3,"sources":["Components/CardList/CardList.jsx","Components/Card/Card.jsx","Components/SearchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardList","props","className","children","Card","alt","src","id","width","name","email","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchTerm","target","value","state","users","a","fetch","then","response","json","err","console","log","this","filteredUser","filter","user","toLowerCase","includes","map","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAQeA,EALE,SAACC,GAEjB,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,EAAME,YCW3BC,G,MAbF,SAACH,GAEb,OAAO,sBAAKC,UAAU,iBAAf,UACJ,qBACCG,IAAI,UACJC,IAAG,iDAA4CL,EAAME,SAASI,GAA3D,QACHC,MAAM,UAEP,6BAAKP,EAAME,SAASM,OACpB,4BAAIR,EAAME,SAASO,aCARC,G,MATG,SAAC,GAAoC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAClC,OAAO,uBACNC,KAAO,OACPZ,UAAY,SACZa,YAAgBH,EAChBI,SAAaH,MC6CAI,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAoBFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAnBrC,EAAKC,MAAQ,CACXC,MAAO,GACPJ,WAAY,IALF,E,4FASd,iCAAAK,EAAA,sDACE,IACEC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAU,EAAKV,SAAS,CAAEK,MAAOK,OAE3C,MAAOC,GACLC,QAAQC,IAAIF,GAPhB,2C,0EAgBA,WAAU,IAAD,EACuBG,KAAKV,MAA3BC,EADD,EACCA,MAAOJ,EADR,EACQA,WACTc,EAAeV,EAAMW,QAAO,SAACC,GACjC,OAAOA,EAAK3B,KAAK4B,cAAcC,SAASlB,EAAWiB,kBAGrD,OACE,sBAAKnC,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAWU,YAAY,SAASC,aAAcoB,KAAKpB,eAEnD,cAAC,EAAD,UACGqB,EAAaK,KAAI,SAACH,GACjB,OAAO,cAAC,EAAD,UAAqBA,GAAVA,EAAK7B,gB,GAvCjBiC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.412722bb.chunk.js","sourcesContent":["import React from 'react';\nimport \"./CardList.style.css\";\n\nconst CardList = (props) => {\n\n\treturn <div className=\"card-list\">{props.children}</div>\n}\n\nexport default CardList;","import React from 'react';\nimport \"./Card.style.css\";\n\nconst Card = (props) => {\n\n\treturn <div className=\"card-container\">\n\t\t\t\t<img \n\t\t\t\t\talt=\"Profile\" \n\t\t\t\t\tsrc={`https://avatars.dicebear.com/api/micah/${props.children.id}.svg`}\n\t\t\t\t\twidth=\"150px\">\n\t\t\t\t\t</img>\n\t\t\t\t<h3>{props.children.name}</h3>\n\t\t\t\t<p>{props.children.email}</p>\n\t\t\t</div>\n}\n\nexport default Card;","import React from 'react';\nimport \"./SearchBox.style.css\";\n\nconst SearchBox = ( { placeHolder, handleChange} ) => {\n\treturn <input \n\t\ttype = \"text\" \n\t\tclassName = \"search\"\n\t\tplaceholder = { placeHolder }\n\t\tonChange = { handleChange }\n\t/>\n}\n\nexport default SearchBox;","import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./Components/CardList/CardList\";\nimport Card from \"./Components/Card/Card\";\nimport SearchBox from \"./Components/SearchBox/SearchBox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      users: [],\n      searchTerm: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then((response) => response.json())\n        .then((json) => this.setState({ users: json }));\n    } \n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  // function to handle user input chagne passed to SearchBox Comp\n  handleChange = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  render() {\n    const { users, searchTerm } = this.state;\n    const filteredUser = users.filter((user) => {\n      return user.name.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>User List</h1>\n        <SearchBox placeHolder=\"Search\" handleChange={this.handleChange} />\n\n        <CardList>\n          {filteredUser.map((user) => {\n            return <Card key={user.id}>{user}</Card>;\n          })}\n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}